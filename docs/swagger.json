{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Documentation of contacts app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://contacts-app-vnda.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations about users."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get list of contacts",
        "operationId": "getContacts",
        "description": "Get list of all contacts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Page numbering",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "The number of contacts per page",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "Contact sorting",
            "required": false,
            "schema": {
              "type": "string",
              "example": "name"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "contactType",
            "description": "Filter contacts by type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "example": "personal"
            }
          },
          {
            "in": "query",
            "name": "isFavourite",
            "description": "Filter contacts by favourite status",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "contactType"
                ],
                "properties": {
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "description": "Contact's phone number",
                    "type": "string",
                    "example": "8494358395"
                  },
                  "email": {
                    "description": "Contact's email",
                    "type": "string",
                    "default": "user@gmail.com",
                    "example": "john.doe@example.com"
                  },
                  "isFavourite": {
                    "description": "Shows if the contact is marked as a favorite",
                    "type": "boolean",
                    "default": false,
                    "example": false
                  },
                  "contactType": {
                    "description": "Contact's type",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "default": "personal",
                    "example": "personal"
                  },
                  "photo": {
                    "description": "Contact's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get conttact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update contact",
        "operationId": "updateContact",
        "description": "Update a contact by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the contact to update",
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "description": "Contact's phone number",
                    "type": "string",
                    "example": "8494358395"
                  },
                  "email": {
                    "description": "Contact's email",
                    "type": "string",
                    "default": "user@gmail.com",
                    "example": "john.doe@example.com"
                  },
                  "isFavourite": {
                    "description": "Shows if the contact is marked as a favorite",
                    "type": "boolean",
                    "default": false,
                    "example": false
                  },
                  "contactType": {
                    "description": "Contact's type",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "default": "personal",
                    "example": "personal"
                  },
                  "photo": {
                    "description": "Contact's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the contact!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated the contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact by ID",
        "operationId": "deleteContact",
        "description": "Delete a contact by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the contact to delete",
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted the contact."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Registering a new user",
        "operationId": "registerUser",
        "description": "Register a new user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "User registration data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email address",
                    "format": "email",
                    "uniqueItems": true,
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "example": "user001"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered a new user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User's login",
        "operationId": "loginUser",
        "description": "Authenticate user and provide session tokens",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "User login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "accessToken"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "user's logout",
        "operationId": "logoutUser",
        "description": "Invalidate the user session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully logged out"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user's session",
        "operationId": "refreshUsersSession",
        "description": "Refresh the session of user and provide new tokens",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Refresh session details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sessionId": {
                    "type": "string"
                  },
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "sessionId",
                  "refreshToken"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully refreshed session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "accessToken"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid session or token"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Sending email with request to reset password",
        "operationId": "requestResetEmail",
        "description": "Dispatch a password reset email to the user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "User email for password reset",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password email has been sent"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset user password",
        "operationId": "resetPassword",
        "description": "Reset the user password with using reset token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Reset password details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "token",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password successfully reset"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "contactType",
          "userId"
        ],
        "properties": {
          "_id": {
            "description": "Contact's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Contact's name",
            "type": "string",
            "example": "John Doe"
          },
          "phoneNumber": {
            "description": "Contact's phone number",
            "type": "number",
            "example": 8494358395
          },
          "email": {
            "description": "Contact's email",
            "type": "string",
            "default": "user@gmail.com",
            "example": "john.doe@example.com"
          },
          "isFavourite": {
            "description": "Shows if the contact is marked as a favorite",
            "type": "boolean",
            "default": false,
            "example": false
          },
          "contactType": {
            "description": "Contact's type",
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "default": "personal",
            "example": "personal"
          },
          "userId": {
            "description": "Identifier of the user",
            "type": "string",
            "example": "60d21b4667d0d8992e610c88"
          },
          "photo": {
            "description": "Link to the contact's photo",
            "type": "string",
            "example": "binary"
          },
          "createdAt": {
            "description": "Time when the contact was added",
            "type": "string",
            "format": "date-time",
            "example": "2023-08-02T10:20:30Z"
          },
          "updatedAt": {
            "description": "Time when the contact was last updated",
            "type": "string",
            "format": "date-time",
            "example": "2023-08-02T10:20:30Z"
          }
        }
      },
      "auth": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "default": "user@gmail.com",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "user001"
          },
          "createdAt": {
            "description": "Time when the user was registered",
            "type": "string",
            "format": "date-time",
            "example": "2023-08-02T10:20:30Z"
          },
          "updatedAt": {
            "description": "Time when the user was last updated",
            "type": "string",
            "format": "date-time",
            "example": "2023-08-02T10:20:30Z"
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successfully found contacts!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully found contacts!"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "data",
                    "page",
                    "perPage",
                    "totalItems",
                    "totalPages",
                    "hasNextPage",
                    "hasPreviousPage"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/contact"
                      }
                    },
                    "page": {
                      "type": "number",
                      "example": 2
                    },
                    "perPage": {
                      "type": "number",
                      "example": 4
                    },
                    "totalItems": {
                      "type": "number",
                      "example": 4
                    },
                    "totalPages": {
                      "type": "number",
                      "example": 4
                    },
                    "hasNextPage": {
                      "type": "boolean",
                      "example": false
                    },
                    "hasPreviousPage": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "201": {
        "description": "Creates a contact",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "statu",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Successfully created a contact!"
                },
                "data": {
                  "type": "object",
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Contact not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Contact not found"
                }
              }
            }
          }
        }
      }
    }
  }
}